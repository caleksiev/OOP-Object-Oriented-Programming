#include"Menu.h"
/*
Реализирал съм системата на 4 нива:
0)Функцията Меnu-грижи се за прочита от конзолата  и коректността на необходимите команди
1)Класат Reader-най-напред получава файл и ако той същесвува прочита от него съответните тагове,техните описания и 
атрибути(!!!Важно,класът разчита,че файлът е с валиден синтаксис и всеки таг е ограден с <p>...</p>),ако файлът
не съществува се създава такъв в който ще се записват подадените тагове от конзолата
След което програмата ще може да осъщесвява различните команди и чрез Menu и функциите вътре в Reader,които връщат стрингово 
съобщение за резултата от извършената операцията в класовете 2),3) се сигнализира на конзолата за извършения резултат
2)Класът Система-грижи се за добавянето и премахването на тагове,тяхното преместване и принтиране 
3)Класът Таг-чиято работа е да се грижи за създаването на html страницата,за записването на коректна информация в подадения html файл
/////////////////
При възникване на  изключениея по време на работа някой от тях се прихващат в Menu и се коригират,останалите грешки
се прихващат и съобщават в main след което програмата приключва
*/
int main()
{
	std::cout << "The allowed commads are:\n"
		<< "1.1:<add><heading><size(1-6)><descr><content>\n"
		<< "1.2:<add><link><descr><content><linkDesciption>\n"
		<< "1.3:<add><image><descr><content>\n"
		<< "1.4:<add><video><descr><content>\n"
		<< "1.5:<add><text><descr><content>\n"
		<< "After every  add-commands the system will ask you do you want to add attributes\n"
		<< "2:remove<descr>\n"
		<< "3.print\n"
		<< "4.moveTo<pos><descr>\n"
		<< "5.load<filePath>\n"
		<< "The file must be a html and every tag to be enclosed by <p>...</p>\n"
		<< "6.save\n"
		<< "7.exit\n";
	try
	{
		Menu();
	}
	catch (const std::exception&ex)
	{
		std::cout << ex.what();
	}
 	return 0;
}